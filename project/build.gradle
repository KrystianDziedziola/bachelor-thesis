buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:1.2")
        classpath("org.postgresql:postgresql:42.1.4")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
//	SPRING
    compile('org.springframework.boot:spring-boot-starter-web:1.5.8.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')

//	SWAGGER
    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')

//  POSTGRES
    runtime('org.postgresql:postgresql:42.1.4')

    compileOnly('org.projectlombok:lombok:1.16.18')

//  TEST
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.assertj:assertj-core:3.8.0')
    testCompile('org.mockito:mockito-core:2.12.0')
}

// ### DOCKER CONFIGURATION ###
task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file("$projectDir/src/main/docker/Dockerfile")
    doFirst {
        copy {
            from jar
            into "${stageDir}/target"
        }
    }
}
